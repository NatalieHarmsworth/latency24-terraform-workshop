name: Terraform Validate

on:
  pull_request:
  workflow_dispatch:

    # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write

jobs:
  terraform-docs:
    name: Terraform Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Generate Terraform Docs
        uses: terraform-docs/gh-actions@main
        with:
          output-file: readme.md
          output-method: inject
          git-push: true
          git-push-user-name: "Terraform Documentation"

      # - name: Generate Terraform Docs
      #   uses: terraform-docs/gh-actions@main
      #   with:
      #     output-file: readme.md
      #     output-method: inject
      #     git-push: true
      #     git-push-user-name: "Terraform Documentation"
      #     recursive-path: modules/
      #     recursive: true

  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -backend=false

      - name: Terraform Validate
        run: |
          terraform fmt -check -recursive
          terraform validate

      - name: TFLint
        shell: bash
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init
          tflint --recursive

      - name: Trivy
        shell: bash
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          trivy config --exit-code 1 -s HIGH,CRITICAL .

  terraform-plan-dev:
    runs-on: ubuntu-latest
    needs: [terraform-validate]
    environment: dev
    name: Terraform Plan Dev

    steps:
      - name: Clone Repository (Latest)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Terraform Plan
        uses: "./.github/templates/terraformPlanApply"
        with:
          apply: false
          tfenvname: dev

  terraform-plan-prod:
    runs-on: ubuntu-latest
    needs: [terraform-validate]
    environment: prod
    name: Terraform Plan Prod

    steps:
      - name: Clone Repository (Latest)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Terraform Plan
        uses: "./.github/templates/terraformPlanApply"
        with:
          apply: false
          tfenvname: prod
